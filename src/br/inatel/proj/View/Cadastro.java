/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.inatel.proj.View;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import javax.swing.JOptionPane;

/**
 *
 * @author burns
 */
public class Cadastro extends javax.swing.JFrame {

    private String usuario = null;
    private String senha = null;
    private String[] linha = new String[1000];

    /**
     * Creates new form Cadastro
     */
    public Cadastro() {
        initComponents();
        this.setLocationRelativeTo(null);           // Centralizar a Tela
        getRootPane().setDefaultButton(btn_cadastro); // Botão Pré-Selecionado
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbl_headlinetxt = new javax.swing.JLabel();
        lbl_username = new javax.swing.JLabel();
        lbl_senha = new javax.swing.JLabel();
        lbl_confsenha = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        txt_senha = new javax.swing.JPasswordField();
        txt_senhaconfirm = new javax.swing.JPasswordField();
        btn_cancelar = new javax.swing.JButton();
        btn_cadastro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbl_headlinetxt.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lbl_headlinetxt.setText("Novo Dungeon Master ");

        lbl_username.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbl_username.setText("Nome De Usuario");

        lbl_senha.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbl_senha.setText("Senha");

        lbl_confsenha.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lbl_confsenha.setText("Confirmar senha");

        btn_cancelar.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_cadastro.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btn_cadastro.setText("Confirmar");
        btn_cadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cadastroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_username)
                            .addComponent(lbl_confsenha)
                            .addComponent(lbl_senha)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txt_senhaconfirm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                .addComponent(txt_senha, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txt_username, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_cadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lbl_headlinetxt)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lbl_headlinetxt)
                .addGap(18, 18, 18)
                .addComponent(lbl_username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_senha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_senha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbl_confsenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_senhaconfirm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar)
                    .addComponent(btn_cadastro))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cadastroActionPerformed
       cadastro();
    }//GEN-LAST:event_btn_cadastroActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        cancel();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cadastro;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_confsenha;
    private javax.swing.JLabel lbl_headlinetxt;
    private javax.swing.JLabel lbl_senha;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPasswordField txt_senha;
    private javax.swing.JPasswordField txt_senhaconfirm;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables

    private void cadastro() {
        usuario = txt_username.getText();
        senha = txt_senha.getText();
        String senha2 = txt_senhaconfirm.getText();
        
        if ( senha.equals(senha2) ) {   // Confirmação de senha
            try {
                lerDados();
            } catch (Exception e) {
                System.out.println("Criando aquivo usuarios.txt ...");
                try {
                    OutputStream os = new FileOutputStream("usuarios.txt", true);
                } catch (FileNotFoundException ex) {
                    System.out.println("Erro no lerdados de novo" + ex.toString());
                }
            }

            // Verifica se já existe tal usuario
            if (!verificaDados()) {
                // se nao existir cai aqui
                // salva os dados
                salvarDados();
                limparCampos();
                sair();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane,"As senhas não conhecidem!", "Senha inválida", JOptionPane.ERROR_MESSAGE);
            txt_senha.setText("");
            txt_senhaconfirm.setText("");
        }
        
    }

    private void cancel() {
        sair();
    }
    private void lerDados() {
        InputStream fluxoEntrada;               // Fluxo de entrada
        InputStreamReader leitorFluxoEntrada;   // Leitor do fluxo de entrada
        BufferedReader bufferEntrada = null;    // Buffer da entrada
        int i = 0;

        try {
            fluxoEntrada = new FileInputStream("usuarios.txt");           // Abre o arquivo "aula12.txt"
            leitorFluxoEntrada = new InputStreamReader(fluxoEntrada);   // Faz a leitura do arquivo
            bufferEntrada = new BufferedReader(leitorFluxoEntrada);     // Buffer de entrada
            linha[0] = bufferEntrada.readLine();                           // Lê a linha e armazena na variavel auxiliar
            i++;
            while (i != 1000) {                 // Enquanto não chegar no final do arquivo
                linha[i] = bufferEntrada.readLine();   // Pula para a próxima linha
                i++;
                if (linha[i] == null) {
                    break;
                }
            }

            // Tratamento de Erros
        } catch (FileNotFoundException ex) {
            System.out.println("Arquivo não encontrado! Método lerDados()");
        } catch (IOException ex) {
            System.out.println("IOException");
        } finally {
            // Sempre fechar o arquivo após ler/gravar !!
            try {
                bufferEntrada.close();      // Fecha o arquivo
            } catch (IOException ex) {
                System.out.println("IOException !");
                ex.printStackTrace();
            }
        }
    }
    private void salvarDados() {
        OutputStream fluxoSaida;                // Fluxo de Saida de dados
        OutputStreamWriter geradorFluxoSaida;   // Gerador do Fluxo de Saida
        BufferedWriter bufferSaida = null;      // Buffer da saida

        try {
            fluxoSaida = new FileOutputStream("usuarios.txt", true);   // Cria o arquivo "usuarios.txt" na pasta do projeto
            geradorFluxoSaida = new OutputStreamWriter(fluxoSaida); // Todo o fluxo de dados será armazenado neste arquivo
            bufferSaida = new BufferedWriter(geradorFluxoSaida);    // Buffer para o gerador de fluxo

            bufferSaida.write(usuario);     // Escreve na primeira linha
            bufferSaida.newLine();                          // Insere uma nova linha no arquivo
            bufferSaida.write(senha);     // Escreve na segunda linha
            bufferSaida.newLine();                          // Insere uma nova linha

            // Tratamento de Erros
        } catch (FileNotFoundException ex) {
            System.err.println("Arquivo não encontrado ! método salvarDados()");
        } catch (IOException ex) {
            System.out.println("Erro de Entrada e Saida de dados no arquivo");
        } finally {

            // Sempre fechar o arquivo após ler/gravar !!
            try {
                bufferSaida.close();    // Fecha o arquivo
            } catch (IOException ex) {
                System.err.println("Deu ruim ao fechar o arquivo");
                ex.printStackTrace();
            }
        }

        // Se deu tudo certo cai aqui
        JOptionPane.showMessageDialog(rootPane, "Usuario cadastrado com Sucesso!");
    }
    private boolean verificaDados() {
        for (int i = 0; i < linha.length; i++) {
            if (linha[i] == null) {
                break;
            }
            if (linha[i].equals(usuario)) {
                JOptionPane.showMessageDialog(rootPane, "Usuario ja cadastrado");
                limparCampos();
                return true;
            }
        }
        return false;
    }

    private void limparCampos() {
        txt_senha.setText("");
        txt_senhaconfirm.setText("");
        txt_username.setText("");
    }

    private void sair() {
        Login l = new Login();
        l.setVisible(true);
        this.dispose();
    }

   
}
